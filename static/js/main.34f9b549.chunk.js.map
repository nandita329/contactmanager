{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","name","className","href","to","exact","activeStyle","color","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","response","this","data","value","children","Component","Consumer","Contact","showInfo","onShowClick","e","onDeleteClick","a","delete","email","phone","onClick","style","cursor","bind","float","marginRight","Contacts","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","target","onFormSubmit","preventDefault","newContact","post","then","res","history","push","onSubmit","About","NotFound","Test","result","num1","num2","calculateRes","toLocaleString","showResult","console","log","title","body","fetch","json","EditContact","updateContact","match","params","put","App","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.34f9b549.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { name } = props;\r\n  return (\r\n    //For testting only\r\n    // <div>\r\n    //   {/* <h1 style={headingStyle}>{name}</h1> */}\r\n    //   <h1>{name}</h1>\r\n    // </div>\r\n\r\n    //Now crete a navbar\r\n\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {name}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                to=\"/\"\r\n                className=\"nav-link\"\r\n                exact\r\n                activeStyle={{ color: \"white\" }}\r\n              >\r\n                home\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                to=\"/contact/add\"\r\n                className=\"nav-link\"\r\n                exact\r\n                activeStyle={{ color: \"white\" }}\r\n              >\r\n                <i className=\"fa fa-plus\"></i>\r\n                Add\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                to=\"/about\"\r\n                className=\"nav-link\"\r\n                exact\r\n                activeStyle={{ color: \"white\" }}\r\n              >\r\n                <i className=\"fa fa-question\"></i>\r\n                About\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  name: \"My App\"\r\n};\r\n\r\n// const headingStyle = {\r\n//   color: \"green\",\r\n//   fontSize: \"50px\"\r\n// };\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return{\r\n        ...state,\r\n        contacts: state.contacts.map(contact => \r\n          contact.id === action.payload.id ? (contact = action.payload) :contact)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await axios.get(\r\n      \"https://jsonplaceholder.typicode.com/users\"\r\n    );\r\n\r\n    this.setState({ contacts: response.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\n// import \"./contact.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showInfo: false\r\n  };\r\n\r\n  onShowClick = e => {\r\n    this.setState({ showInfo: !this.state.showInfo });\r\n  };\r\n  // onDeleteClick = () => {\r\n  //   this.props.onDeleteClickHandler();\r\n  // };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showInfo } = this.state;\r\n    return (\r\n      //Insted of using everywhere this.props we can use destructuring\r\n      //   <div>\r\n      //     <h1>{this.props.name}</h1>\r\n      //     <ul>\r\n      //       <li>Email :{this.props.email}</li>\r\n      //       <li>Contact :{this.props.phone}</li>\r\n      //     </ul>\r\n      //   </div>\r\n\r\n      // <div className=\"card card-body mb-3\">\r\n      //   <h1>\r\n      //     {name}\r\n      //     {/* <i\r\n      //       onClick={this.onShowClick.bind(this, name)}\r\n      //       className=\"fas fa-sort-down\"\r\n      //     /> */}\r\n      //     <i\r\n      //       onClick={this.onShowClick}\r\n      //       className=\"fas fa-sort-down\"\r\n      //       style={{ cursor: \"pointer\" }}\r\n      //     />\r\n      //     <i\r\n      //       className=\"fas fa-times\"\r\n      //       onClick={this.onDeleteClick}\r\n      //       style={{ cursor: \"pointer\", color: \"red\", float: \"right\" }}\r\n      //     />\r\n      //   </h1>\r\n      //   {showInfo ? (\r\n      //     <ul className=\"list-group\">\r\n      //       <li className=\"list-group-item\">Email :{email}</li>\r\n      //       <li className=\"list-group-item\">Contact :{phone}</li>\r\n      //     </ul>\r\n      //   ) : null}\r\n      // </div>\r\n\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h1>\r\n                {name}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  style={{ cursor: \"pointer\", color: \"red\", float: \"right\" }}\r\n                />\r\n                <Link to={`contact/edit/${id}`} >\r\n                  <i className=\"fas fa-pencil-alt\" \r\n                  style={{ cursor: \"pointer\", color: \"black\", float: \"right\",marginRight:\"1rem\" }}></i>\r\n                </Link>\r\n              </h1>\r\n              {showInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email :{email}</li>\r\n                  <li className=\"list-group-item\">Contact :{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  //   constructor() {\r\n  //     super();\r\n  //     this.state = {\r\n  //       contacts: [\r\n  //         {\r\n  //           id: 1,\r\n  //           name: \"niki\",\r\n  //           email: \"a@gmail.com\",\r\n  //           phone: \"9611670845\"\r\n  //         },\r\n  //         {\r\n  //           id: 2,\r\n  //           name: \"niki1\",\r\n  //           email: \"a1@gmail.com\",\r\n  //           phone: \"9611670845\"\r\n  //         },\r\n  //         {\r\n  //           id: 3,\r\n  //           name: \"niki2\",\r\n  //           email: \"a2@gmail.com\",\r\n  //           phone: \"9611670845\"\r\n  //         }\r\n  //       ]\r\n  //     };\r\n  //   }\r\n\r\n  //If no need of constructure we can define only state\r\n  //Insted of storing component lable state  will store global by using context\r\n  //   state = {\r\n  //     contacts: [\r\n  //       {\r\n  //         id: 1,\r\n  //         name: \"niki\",\r\n  //         email: \"a@gmail.com\",\r\n  //         phone: \"9611670845\"\r\n  //       },\r\n  //       {\r\n  //         id: 2,\r\n  //         name: \"niki1\",\r\n  //         email: \"a1@gmail.com\",\r\n  //         phone: \"9611670845\"\r\n  //       },\r\n  //       {\r\n  //         id: 3,\r\n  //         name: \"niki2\",\r\n  //         email: \"a2@gmail.com\",\r\n  //         phone: \"9611670845\"\r\n  //       }\r\n  //     ]\r\n  //   };\r\n\r\n  //   deleteContact = id => {\r\n  //     const { contacts } = this.state;\r\n  //     const newContacts = contacts.filter(contact => contact.id !== id);\r\n  //     this.setState({ contacts: newContacts });\r\n  //   };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n\r\n    //below code used where we use component leble state\r\n\r\n    // const { contacts } = this.state;\r\n    // return (\r\n    //   <Fragment>\r\n    //     {contacts.map(contact => (\r\n    //       <Contact\r\n    //         key={contact.id}\r\n    //         contact={contact}\r\n    //         onDeleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n    //       />\r\n    //     ))}\r\n    //   </Fragment>\r\n    // );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"./../../context\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport TextInputGroup from \"./../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onFormSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // const newContact = { id: uuid(), name, email, phone };\r\n    const newContact = { name, email, phone };\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone No is required\" } });\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/users\", newContact)\r\n      .then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n    // dispatch({ type: \"ADD_CONTACT\", payload: newContact });\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    //Redirect to another page\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone No...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <p>About Page</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"./../layout/TextInputGroup\";\r\n\r\n// Number.prototype.commas= function(){\r\n//   var s= '', temp,\r\n//   num= this.toString().split('.'), n=num[0];\r\n//   while(n.length> 3){\r\n//    temp= n.substring(n.length-3);\r\n//    s= ','+temp+s;\r\n//    n= n.slice(0, -3);\r\n//   }\r\n//   if(n) s= n+s;\r\n//   if(num[1]) s+='.'+num[1];\r\n//   return s;\r\n//  }\r\n\r\nclass Test extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      body: \"\",\r\n      num1: \"\",\r\n      num2: \"\",\r\n      showResult: false,\r\n      calculateRes: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value, showResult: false });\r\n  };\r\n\r\n  onFormSubmit = e => {\r\n    e.preventDefault();\r\n    const { num1, num2 } = this.state;\r\n    let result = num1 / num2;\r\n    if (result) {\r\n      this.setState({\r\n        calculateRes: result.toLocaleString(),\r\n        showResult: true\r\n      });\r\n    }\r\n    console.log(result);\r\n    this.setState({\r\n      num1: \"\",\r\n      num2: \"\"\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ title: data.title, body: data.body }));\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log(\"componentWillMount ...\");\r\n  // }\r\n\r\n  render() {\r\n    const { title, body, num1, num2, calculateRes, showResult } = this.state;\r\n    return (\r\n      // <div>\r\n      //   <h1>{title}</h1>\r\n      //   <p>{body}</p>\r\n      // </div>\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Divde two nos</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onFormSubmit}>\r\n            <TextInputGroup\r\n              label=\"Num1\"\r\n              name=\"num1\"\r\n              placeholder=\"Enter 1st number...\"\r\n              value={num1}\r\n              onChange={this.onChange}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Num2\"\r\n              name=\"num2\"\r\n              placeholder=\"Enter 2nd num...\"\r\n              value={num2}\r\n              onChange={this.onChange}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Calculate\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n          {showResult ? <h5>Result = {calculateRes}</h5> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"./../../context\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport TextInputGroup from \"./../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  \r\n  async componentDidMount(){\r\n    const {id} = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    const contact = res.data;\r\n    this.setState({\r\n      name :contact.name,\r\n      email:contact.email,\r\n      phone:contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onFormSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // const newContact = { id: uuid(), name, email, phone };\r\n    const newContact = { name, email, phone };\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone No is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact ={\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n    const {id} = this.props.match.params;\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updateContact);\r\n\r\n    dispatch({type:'UPDATE_CONTACT',payload:res.data})\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    //Redirect to another page\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone No...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\n// import Contact from \"./components/Contact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n// function App() {\n//   const name = \"Suraj\";\n//   const showName = false;\n//   const showMath = false;\n//   // this.state = {\n//   //   showMath: false\n//   // };\n//   let math;\n//   if (showMath) {\n//     math = <h1>1+1 = {1 + 1}</h1>;\n//   } else {\n//     math = null;\n//   }\n//   return (\n//     <div className=\"App\">\n//       <h1>Welcome</h1>\n//       {showName ? <h1>Hello {name}</h1> : null}\n//       {math}\n//     </div>\n//   );\n// }\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       showMath: true\n//     };\n//   }\n//   render() {\n//     const name = \"Suraj\";\n//     const showName = true;\n//     // const showMath = false;\n//     let math;\n//     if (this.state.showMath) {\n//       math = <h1>1+1 = {1 + 1}</h1>;\n//     } else {\n//       math = null;\n//     }\n//     return (\n//       <div className=\"App\">\n//         <h1>Welcome</h1>\n//         {showName ? <h1>Hello {name}</h1> : null}\n//         {math}\n//       </div>\n//     );\n//   }\n// }\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header name=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n              {/* <Contact name=\"Suraj\" email=\"t@gmail.com\" phone=\"9611670845\" />\n          <Contact name=\"Tapan\" email=\"s@gmail.com\" phone=\"9611670845\" /> */}\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}